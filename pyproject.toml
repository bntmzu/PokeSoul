[tool.poetry]
name = "pokesoul"
version = "0.1.0"
description = "A Django-based Pokemon personality matching system"
authors = ["bntmzu <kuranova988@gmail.com>"]
readme = "README.md"
packages = [{include = "PokeSoul"}]

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.2.4"
psycopg2-binary = "^2.9.10"
django-environ = "^0.10.0"
djangorestframework = "^3.16.0"
redis = "^6.3.0"
drf-yasg = "^1.21.10"
requests = "^2.31.0"
tenacity = "^9.1.2"
gunicorn = "^21.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-django = "^4.11.1"
factory-boy = "^3.3.3"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
mypy = "^1.17.1"
pre-commit = "^4.2.0"
bandit = "^1.8.6"
coverage = "^7.10.2"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    ".pytest_cache",
    "migrations",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = false
warn_unreachable = true
strict_equality = false

[[tool.mypy.overrides]]
module = [
    "django.*",
    "rest_framework.*",
    "drf_yasg.*",
    "redis.*",
    "requests.*",
    "tenacity.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["core", "pokemons", "matcher"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/commands/*",
    "*/factories.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]
